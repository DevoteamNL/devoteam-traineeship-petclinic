# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- 'seleniumintegration'

pool:
  vmImage: ubuntu-latest
  demands:
  - maven

variables:
  imageName: 'jettypetclinic'
  dockerhubNS: 'robinmohandevoteam' 

steps:


- task: UsePythonVersion@0
  displayName: 'Use Python 3.8 (for pytest in mvn)'
  inputs:
    versionSpec: '3.8'
    addToPath: true

- script: |
   python -m pip install --upgrade pip
   pip install selenium
   pip install pytest
   pip install pytest-html
   pip install chromedriver-py==88.0.4324.96
   pip install pytest-xdist
   pip install pytest-nunit
  displayName: 'Install Python plugins (for pytest in mvn)'


- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: petclinic

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
    
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'test'

# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.8'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'deploy'


- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: dockerrobinmohandevoteam

- task: Docker@2
  displayName: Build an image
  inputs:
    repository: $(dockerhubNS)/$(imageName)
    command: build
    Dockerfile: ./Dockerfile

- task: Docker@2
  displayName: Push image
  inputs:
    containerRegistry: |
      dockerrobinmohandevoteam
    repository: $(dockerhubNS)/$(imageName)
    command: push
    # tags: |
    #   test1
    #   test2